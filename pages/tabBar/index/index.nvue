<template>
    <div>
        <tabs @change="changeTab" :index="tabIndex">
            <tab-bar>
                <div class="tab-bar-item" v-for="(tabBar, t) in tabBars" :key="t" :ref="tabBar.bar_path + t">
                    <text class="tab-bar-title" :class="[tabIndex === t ? 'active' : '']">{{tabBar.bar_name}}</text>
                </div>
            </tab-bar>
            <tab-content>
                <list class="list" @loadmore="loadMore(index1)" loadmoreoffset="10" v-for="(tab,index1) in newsitems"
                    :key="index1">
                    <refresh class="refresh" @refresh="onrefresh" @pullingdown="onpullingdown" :display="refreshing ? 'show' : 'hide'">
                        <text class="refresh-text">{{refreshText}}</text>
                    </refresh>
                    <cell>
                        <media-list :data="tab" @close="close(index1,index2)" @click="goDetail(newsitem)"></media-list>
                    </cell>
                    <cell class="loadmore">
                        <text class="loadmore-text">{{tab.loadingText}}加载更多</text>
                    </cell>
                </list>
            </tab-content>
        </tabs>
    </div>
</template>

<script>
    import tabContent from '@../../../components/tab-nvue/tabContent.nvue'
    import tabBar from '@../../../components/tab-nvue/tabBar.nvue'
    import tabs from '@../../../components/tab-nvue/tabs.nvue'
    import mediaList from '@../../../components/tab-nvue/newslist.nvue'
    const dom = weex.requireModule('dom')
    export default {
        components: {
            tabContent,
            tabBar,
            tabs,
            mediaList
        },
        data() {
            return {
                refreshing: false,
                refreshText: "下拉可以刷新",
                tabIndex: 1,
                newsitems: [],
				tabBars:[],
            }
        },
        created() {
            setTimeout(() => {
                uni.request({
                	url: 'https://www.babaofan.com/mobile/mix/getAllBar',
                	method: 'GET',
                	data: {},
                	success: res => {
						console.log(res);
						this.tabBars=res.data.data
					},
                	fail: () => {},
                	complete: () => {}
                });
				uni.request({
					url: 'https://www.babaofan.com/mobile/mix/getDatamix',
					method: 'GET',
					data: {},
					success: res => {
						
						this.newsitems = res.data.data;
					},
					fail: () => {},
					complete: () => {}
				});
            }, 150)
        },
        methods: {
            goDetail(e) {
                uni.navigateTo({
                    url: '/pages/template/tabbar/detail/detail?data=' + e.title
                })
            },
            close(index1, index2) {
            	uni.showModal({
            		content: '是否删除本条信息？',
            		success: (res) => {
            			if (res.confirm) {
            				this.newsitems[index1].data.splice(index2, 1);
            			}
            		}
            	})
            },
            loadMore(e) {
            	setTimeout(() => {
            		this.addData(e);
            	}, 1000);
            },
            addData(e) {
            	console.log("加载更多...");
            	if (this.newsitems[e].data.length > 30) {
            		this.newsitems[e].loadingText = '没有更多了';
            		return;
            	}
            	for (let i = 1; i <= 10; i++) {
            		this.newsitems[e].data.push(this['data' + Math.floor(Math.random() * 5)]);
            	}
            },
            async changeTab(e) {
                this.tabIndex = e.index;
                const el = this.$refs[this.tabBars[e.index].bar_path + e.index][0]
                let elSize = await this.getElSize(el);
                if (elSize.left + elSize.width > 750) {
                    let index = e.index - 4;
                    let newEl = this.$refs[this.tabBars[index].bar_path + index][0]
                    dom.scrollToElement(newEl, {});
                    return;
                }
                if (elSize.left < 0) {
                    dom.scrollToElement(el, {});
                }
            },
            getElSize(el) { //得到元素的size
                return new Promise((res, rej) => {
                    const result = dom.getComponentRect(el, option => {
                        res(option.size);
                    })
                })
            },
    
            onrefresh(event) {
            	uni.showToast({
            		title: "refresh",
            		icon: "none"
            	});
            	this.refreshText = "正在刷新...";
            	this.refreshing = true;
            	setTimeout(() => {
            		console.log("刷新结束")
            		this.refreshing = false
            	}, 2000)
            },
            onpullingdown(event) {
            	if (this.refreshing) {
            		return;
            	}
            	if (Math.abs(event.pullingDistance) > Math.abs(event.viewHeight)) {
            		this.refreshText = "释放立即刷新";
            	} else {
            		this.refreshText = "下拉可以刷新";
            	}
            }
        }
    }
</script>

<style>
    .tab-bar-item {
        width: 150px;
        height: 100px;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .tab-bar-title {
        height: 100px;
        line-height: 100px;
        font-size: 30px;
        color: #555;
    }

    .active {
        color: #007AFF;
    }

    .loadmore {
        height: 70px;
        width: 750px;
        flex-direction: column;
        justify-content: center;
    }

    .loadmore-text {
        font-size: 30px;
        text-align: center;
        color: #999999;
    }

    .refresh {
        width: 750px;
        height: 70px;
        flex-direction: row;
        align-items: center;
        justify-content: center;
    }

    .refresh-text {
        text-align: center;
        font-size: 28px;
        color: #999999;
    }
</style>
